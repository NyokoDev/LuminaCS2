html, body {
  overflow: visible !important;
}


.Panel
{
    z-index: -1;
    position: absolute;
    width: 950rem;
    height: 500rem;
    top: -600rem;
    left:140rem;
    background-color: rgba(50, 50, 50, 0.8); /* Dark grey background with transparency */
    backdrop-filter: blur(10px); /* Apply blur to the background behind the panel */
    box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.6); /* Blurred black inner shadow */
    overflow-y: auto; /* Enable vertical scrolling */
    max-height: 400rem;
    pointer-events: auto;
    cursor: pointer;
    border-radius: 20rem; /* Rounded corners */
    color: #e0e0e0; /* Light grey text color for contrast */
    font-family: Overpass,"Noto Sans","Noto Sans KR","Noto Sans JP","Noto Sans SC","Noto Sans TC","Noto Sans Thai","Noto Sans Hebrew","Noto Sans Arabic","Noto Sans Bengali","Noto Sans Devanagari", sans-serif; /* Clean and modern font */
}

@media (min-width: 3840px) {
  .Panel {
        z-index: -1;
    position: absolute;
    width: 950rem;
    height: 500rem;
    top: -600rem;
    left:140rem;
    background-color: rgba(50, 50, 50, 0.8); /* Dark grey background with transparency */
    backdrop-filter: blur(10px); /* Apply blur to the background behind the panel */
    box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.6); /* Blurred black inner shadow */
    overflow-y: auto; /* Enable vertical scrolling */
    max-height: 400rem;
    pointer-events: auto;
    cursor: pointer;
    border-radius: 20rem; /* Rounded corners */
    color: #e0e0e0; /* Light grey text color for contrast */
    font-family: Overpass,"Noto Sans","Noto Sans KR","Noto Sans JP","Noto Sans SC","Noto Sans TC","Noto Sans Thai","Noto Sans Hebrew","Noto Sans Arabic","Noto Sans Bengali","Noto Sans Devanagari", sans-serif; /* Clean and modern font */
  }
}


.Span1
{
    width: 1500rem;
    height: 200rem;
}

.LuminaBckImage
{
    position: absolute;
    right: 200rem;
    width: 100%;
    height: 100%;
}

.TabsRow
{
    position: absolute;
    display: flex;
    width: 950rem;
    height: 50rem;
    top: -650rem;
    left:140rem;
    border-radius: 20rem; /* Rounded corners */
    background-color: rgba(50, 50, 50, 0.8); /* Dark grey background with transparency */
    box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.6); /* Blurred black inner shadow */
    color: #e0e0e0; /* Light grey text color for contrast */
    font-family: Overpass,"Noto Sans","Noto Sans KR","Noto Sans JP","Noto Sans SC","Noto Sans TC","Noto Sans Thai","Noto Sans Hebrew","Noto Sans Arabic","Noto Sans Bengali","Noto Sans Devanagari", sans-serif; /* Clean and modern font */
    pointer-events: auto;
}


    .TabsRow > *
    {
        filter: invert(100%);
        width: 50rem; /* Adjust the width of each child element */
        height: 50rem; /* Adjust the height of each child element to match the width for perfect circles */
        display: flex; /* Ensure that child elements use flexbox layout */
        align-items: center; /* Center contents vertically */
        justify-content: center; /* Center contents horizontally */
    }

.ColorAdjustmentsButton,
.ColorAdjustmentsButtonDeselected {
  position: absolute;
  display: flex;
  background-image: url('coui://ui-mods/Icons/ColorAdjustments.svg');
  background-size: cover;
  width: 45rem;
  height: 45rem;
  left: 900rem;

  border-radius: 50%;  /* Circular shape */
  transition: 
    transform 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    filter 0.4s ease;
  will-change: transform, filter;
  cursor: pointer;

   filter: invert(100%)
}

.ColorAdjustmentsButton:hover,
.ColorAdjustmentsButtonDeselected:hover {
  transform: scale(1.08);
  filter: invert(100%)
}

.SettingsButton,
.SettingsButtonDeselected {
  position: absolute;
  background-image: url('coui://ui-mods/Icons/SettingsGear.svg');
  background-size: cover;
  width: 45rem;
  height: 45rem;
  left: 0rem;

  border-radius: 50%;
  filter: invert(100%);
  transition: 
    transform 0.4s cubic-bezier(0.4, 0, 0.2, 1),
    filter 0.4s ease-in-out;
  cursor: pointer;
  will-change: transform, filter;
}

.SettingsButton:hover,
.SettingsButtonDeselected:hover {
  transform: scale(1.1) rotate(10deg);
  filter: invert(50%);
}

.PlanetaryButton,
.PlanetaryButtonDeselected {
  position: absolute;
  background-image: url('coui://ui-mods/Icons/Planet.svg');
  background-size: cover;
  width: 43rem;
  height: 43rem;
  left: 850rem;
  border-radius: 50%;
  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  will-change: transform;
}

.PlanetaryButton:hover,
.PlanetaryButtonDeselected:hover {
  transform: translateY(-15%) scale(1.05);
  /* Optional: add a subtle shadow or glow */
  /* box-shadow: 0 0 15px rgba(0, 150, 255, 0.5); */
}


//Tonemapping

.TonemappingButton,
.TonemappingButtonDeselected {
  position: absolute;
  background-image: url('coui://ui-mods/Icons/CwrbLHu.png');
  background-size: cover;
  width: 43rem;
  height: 43rem;
  left: 800rem;
  border-radius: 50%;
  transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  will-change: transform;
}

.TonemappingButton:hover,
.TonemappingButtonDeselected:hover {
  transform: translateY(-15%) scale(1.05);
}


.SkyAndFogButton,
.SkyAndFogButtonDeselected {
  position: absolute;
  background-image: url('coui://ui-mods/Icons/suuIDOT.png');
  background-size: cover;
  width: 43rem;
  height: 43rem;
  left: 750rem;
  border-radius: 50%;
  cursor: pointer;
  will-change: transform;
  transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}

.SkyAndFogButton:hover,
.SkyAndFogButtonDeselected:hover {
  transform: translateY(-15%) scale(1.05);
}



.LUTInputText
{
    position: absolute;
    color: transparent;
    width: 500rem;
    top: 50rem;
    left: 20rem;
}

.LUTContributionSlider
{
    position: absolute;
    height: 30rem;
    top: 250rem;
    right: -120rem;
    left: 250rem;
    width: 500rem;
    background-color: rgba(0, 0, 0, 0.5);
}

.LUTContributionInput
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    top: 250rem;
    left: 155rem;
    width: 50rem;
}




.ColorAdjustmentsButton:hover
{
    transform: translateY(-15%);
}



.SettingsButton:hover
{
    transform: translateY(-15%);
}


.Global
{
    pointer-events: auto;
}

.ColorWheel
{
    display: flex;
    position: absolute;
    width: 500rem;
    height: 500rem;
}

.Wheel
{
    background-color: red;
    display: flex;
    width: 300rem;
    height: 300rem;
}

.TextField1
{
    position: absolute;
    width: 300rem;
}











.ColorAdjustments
{
    position: absolute;
    right: 200rem;
    width: 800rem;
 
}

.ColorAdjustments label{
       color: white !important; 
}


.FirstTabLabel
{
    color: white;
    position: absolute;
    top: 15rem;
    left: -20rem;
    width: 200rem;
    font-size: 20rem;
}

.CALabel
{
    color: rgb(255, 255, 255);
    position: absolute;
    top: 50rem;
    left: 480rem;
    width: 100%;
    font-size: 18rem;
}


// PostExposure Variables
$pe-top: 20rem;
$global-height: 40rem;
$distance: 30rem;

.PostExposureSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 20rem;
    width: 500rem;
        color: white;
}

.PostExposureLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 20rem;
    white-space: nowrap;
        color: white;
}

.PostExposureValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 20rem;
    width: 150rem;
    white-space: nowrap;
}

.pecheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 20rem;
    width: 45rem;
    height: 45rem;
}

.pecheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.postexposurecheckbox2
{
    z-index: -1;
}






// Contrast variables
$contrast-top: 50rem;

.ContrastSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 70rem;
    width: 500rem;
}

.ContrastLabel
{
    position: absolute;
     color: white;
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 70rem;
    white-space: nowrap;
}

.ContrastValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 70rem;
    width: 150rem;
    white-space: nowrap;
}

// Contrast checkbox
.cocheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 70rem;
    width: 45rem;
    height: 45rem;
}

.cocheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.contrastcheckbox2
{
    z-index: -1;
}



// Hueshift variables
$hueshift-top: 80rem;

.HueshiftSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 120rem;
    width: 500rem;
}

.HueshiftLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 120rem;
    white-space: nowrap;
}

.HueshiftValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 120rem;
    width: 150rem;
    white-space: nowrap;
}

// Hueshift checkbox
.hscheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 120rem;
    width: 45rem;
    height: 45rem;
}

.hscheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.hueshiftcheckbox2
{
    z-index: -1;
}


// Saturation

.SaturationSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 170rem;
    width: 500rem;
}

.SaturationLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 170rem;
    white-space: nowrap;
}

.SaturationValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 170rem;
    width: 150rem;
    white-space: nowrap;
}

// Saturation checkbox
.satcheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 170rem;
    width: 45rem;
    height: 45rem;
}

.satcheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.satcheckbox2
{
    z-index: -1;
}


// White Balance

.WBLabel
{
    color: rgb(255, 255, 255);
    position: absolute;
    top: 280rem;
    left: 500rem;
    width: 100%;
    font-size: 18rem;
}

// Temperature

.TemperatureSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 240rem;
    width: 500rem;
}

.TemperatureLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 240rem;
    white-space: nowrap;
}

.TemperatureValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 240rem;
    width: 150rem;
    white-space: nowrap;
}

// Temperature checkbox
.tempcheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 240rem;
    width: 45rem;
    height: 45rem;
}

.tempcheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.tempcheckbox2
{
    z-index: -1;
}


// Tint

.TintSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 290rem;
    width: 500rem;
}

.TintLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 290rem;
    white-space: nowrap;
}

.TintValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 290rem;
    width: 150rem;
    white-space: nowrap;
}


// Tint checkbox
.tintcheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 290rem;
    width: 45rem;
    height: 45rem;
}

.tintcheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.tintcheckbox2
{
    z-index: -1;
}

// Brightness

.BLabel
{
    color: rgb(255, 255, 255);
    position: absolute;
    top: 400rem;
    left: 500rem;
    width: 100%;
    font-size: 18rem;
}


// Shadows

.ShadowsSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 360rem;
    width: 500rem;
}

.ShadowsLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 360rem;
    white-space: nowrap;
}

.ShadowsValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 360rem;
    width: 150rem;
    white-space: nowrap;
}

// Shadows checkbox
.shadowscheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 360rem;
    width: 45rem;
    height: 45rem;
}

.shadowscheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.shadowscheckbox2
{
    z-index: -1;
}


.MidtonesSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 430rem;
    width: 500rem;
}

.MidtonesLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 430rem;
    white-space: nowrap;
}

// Midtones
.MidtonesValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 430rem;
    width: 150rem;
    white-space: nowrap;
}

// Shadows checkbox
.midtonescheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 430rem;
    width: 45rem;
    height: 45rem;
}

.midtonescheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.midtonescheckbox2
{
    z-index: -1;
}



// Highlights
.HighlightsSlider
{
    position: absolute;
    height: 30rem;
    right: -120rem;
    left: 480rem;
    top: $global-height + $distance + 500rem;
    width: 500rem;
}

.HighlightsLabel
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 200rem;
    width: 150rem;
    top: $global-height + $distance + 500rem;
    white-space: nowrap;
}

.HighlightsValue
{
    position: absolute;
    color: white;
    font-size: 18.7rem;
    left: 370rem;
    top: $global-height + $distance + 500rem;
    width: 150rem;
    white-space: nowrap;
}

// highlights checkbox
.highlightscheckbox
{
    position: absolute;
    left: 370rem;
    top: $global-height + $distance + 500rem;
    width: 45rem;
    height: 45rem;
}

.highlightscheckboximage
{
    position: absolute;
    left: 0rem;
    top: $global-height + $distance + -70rem;
    background-image: url('coui://ui-mods/Icons/Checkmark.svg');
    background-size: cover; /* Make sure the background image covers the entire area */
    width: 28rem;
    height: 28rem;
    filter: invert(100%);
}

.highlightscheckbox2
{
    z-index: -1;
}





// Settings

.HelloLabel
{
    font-size: 200rem;
}


.SettingsPanel
{
    position: absolute;
    top: 0rem;
    left: 0rem;
    width: inherit;
    height: inherit;
    overflow-y: auto;
}

.LuminaSaveButton
{
    position: absolute;
    display: flex;
    width: 300rem;
    top: 20rem;
    left: 40rem;
}

.LuminaResetSettingsButton
{
    position: absolute;
    display: flex;
    width: 300rem;
    top: 80rem;
    left: 40rem;
}

// Save image
.SaveButtonLuminaImage
{
    position: absolute;
    left: 125rem;
    top: 30rem;
    mask-image: url('coui://ui-mods/Icons/save.svg')
}

// Save image
.ResetButtonLuminaImage
{
    position: absolute;
    left: 125rem;
    top: 30rem;
    mask-image: url('coui://ui-mods/Icons/reset.svg')
}

.VersionCheckLabel
{
    position: absolute;
    bottom: 0rem;
    width: 100rem;
    height: 30rem;
    background-color: rgba(0, 0, 0, 0.5); /* Black with 70% opacity */
    color: rgba($color: #6b6b6b, $alpha: 1.0) /* Set text color to white */
}

.UnityLegacyUIButton
{
    position: absolute;
    display: flex;
    background-color: black;
    width: 300rem;
    left: 400rem;
    top: 80rem;
}

.PlanetaryPanel
{
    position: absolute;
    top: 0rem;
    left: 0rem;
    width: inherit;
    height: inherit;
    overflow-y: auto;
}


.PresetManagementLabel
{
    position: absolute;
    width: 500rem;
    font-size: 20rem;
    top: 160rem;
    left: -100rem;
    color: rgba(255, 255, 255, 0.5);
    white-space: nowrap;
}

.LuminaExportPresetButton
{
    position: absolute;
    display: flex;
    top: 230rem;
    height: 30rem;
    width: 200rem;
    left: 40rem;
}


.logo_IpH
{
    mask-image: url('https://i.ytimg.com/vi/rNW1xrpt8OE/hqdefault.jpg') !important
}

.LuminaImportPresetButton
{
    position: absolute;
    display: flex;
    top: 290rem;
    height: 30rem;
    width: 200rem;
    left: 40rem;
}

.LuminaOpenFolder
{
    position: absolute;
    display: flex;
    top: 335rem;
    height: 30rem;
    width: 250rem;
    left: 40rem;
}

.PresetConfirmation
{
    position: absolute;
    top: 150rem;
    height: 200rem;
    width: 400rem;
    left: 450rem;
}

.PresetInputText
{
    position: absolute;
    color: white;
    width: 200rem;
    top: 205rem;
    left: 40rem;
}

// Planetary Settings

// Latitude
.LatitudeLabel
{
    position: absolute;
    color: rgb(255, 255, 255);
    font-size: 20rem;
    left: 0rem;
    width: 150rem;
    top: $global-height + $distance + -9rem;
    white-space: nowrap;
}

.LatitudeSlider
{
    position: absolute;
    height: 30rem;
    right: 10rem;
    top: $global-height + $distance + 0rem;
    width: 600rem;
}

.LatitudeInput
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 155rem;
   width: 150rem;
    top: $global-height + $distance + -9rem;
    white-space: nowrap;
}

//Longitude
.LongitudeLabel
{
    position: absolute;
    color: rgb(255, 255, 255);
    font-size: 20rem;
    left: 0rem;
    width: 150rem;
    top: $global-height + $distance + 31rem;
    white-space: nowrap;
}

.LongitudeSlider
{
    position: absolute;
    height: 30rem;
    right: 10rem;
    top: $global-height + $distance + 40rem;
    width: 600rem;
}

.LongitudeInput
{
    position: absolute;
    color: rgb(118, 118, 118);
    font-size: 20rem;
    left: 155rem;
   width: 150rem;
    top: $global-height + $distance + 31rem;
    white-space: nowrap;
}


.TimeOfDaySlider
{
    position: absolute;
    display: flex;
    top: 20rem;
    width: 300rem;
    box-shadow: #000;
}

.TimeOfDaySlider
{
    font-size: 20rem;
    left: 250rem;
    color: white;
    box-shadow: #000;
}

.LuminaVersion_Image
{
    display: flex;
    position: absolute;
    top: 50rem;
    left: 400rem;
    height: 200rem;
    width: 500rem;
    background-size: cover;
    background-repeat: no-repeat;
    background-image: url("coui://ui-mods/Icons/version.png?raw=true");
    border: 5px solid #000; /* Example border: 5px solid black */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5); /* Example box shadow: offset-x, offset-y, blur-radius, color */
}

.Version_Text
{
    display: flex;
    position: absolute;
    top: 50rem;
    left: 300rem;
    height: 200rem;
    width: 500rem;
}

.TonemappingDropdown
{
    position: absolute;
    color: white;
    width: 300rem;
    top: 5rem;
    left: 650rem;
    pointer-events: auto;
    z-index: 4000;
}

.LutLabelInUse
{
    position: absolute;
    color: rgb(211, 211, 211);
    font-size: 15rem;
    top: 45rem;
    left: 23rem;
}


.LUTSDropdown
{
    position: absolute;
    color: white;
    width: 500rem;
    top: 60rem;
    left: 15rem;
}

.PublicServiceAnnouncement
{
    position: absolute;
    display: flex;
    top: 250rem;
    left: 0;
    width: 100%;
    height: 50rem;
    background-color: rgba(0, 0, 0, 0.944);
}

    .PublicServiceAnnouncement h1
    {
        position: absolute;
        color: rgb(255, 255, 255);
        font-size: 20rem;
        top: -15rem;
        text-transform: uppercase;
        left: 130rem;
    }

    .PublicServiceAnnouncement h2
    {
        position: absolute;
        color: rgb(255, 255, 255);
        font-size: 20rem;
        top: 1rem;
        text-transform: uppercase;
        left: 130rem;
    }

.LoadLUTButton, .OpenLUTButton
{
    position: absolute;
    height: 30rem;
    width: 208rem;
    top: 218rem;
    box-sizing: border-box; /* Ensure consistent box-sizing */
}

.LoadLUTButton
{
    left: 20rem;
}

.OpenLUTButton
{
    left: 20rem;
    top: 240rem !important;
    z-index: 200;
}


.LutLabel
{
    color: rgb(255, 255, 255);
    position: absolute;
    top: 15rem;
    left: -390rem;
    width: 100%;
    font-size: 18rem;
}

.ModeLabel
{
    position: absolute;
    display: flex;
    top: 15rem;
    left: 460rem;
    width: 100%;
    font-size: 18rem;
}


.cubemap-intensity-slider
{
    position: absolute;
    top: 85rem;
    width: 670rem;
    left: 250rem;
}

.space-emission-label
{
    color: white;
    position: absolute;
    left: 13rem;
    text-transform: uppercase;
    top: 80rem;
}

.space-emission-texture-label
{
    color: white;
    position: absolute;
    left: 35rem;
    text-transform: uppercase;
    top: 58rem;
}

.custom-sun-label
{
    color: rgb(142, 139, 139);
    position: absolute;
    left: 35rem;
    text-transform: uppercase;
    top: 110rem;
}

.sun-diameter-label
{
    color: wheat;
    position: absolute;
    left: 13rem;
    text-transform: uppercase;
    top: 143rem;
    pointer-events: auto;
}

.sun-adjust-diameter-slider
{
    position: absolute;
    top: 150rem;
    width: 350rem;
    left: 150rem;
    pointer-events: auto;
}

.sun-intensity-label
{
    color: wheat;
    position: absolute;
    left: 13rem;
    text-transform: uppercase;
    top: 173rem;
    pointer-events: auto;
}

.sun-adjust-intensity-slider
{
    position: absolute;
    top: 180rem;
    width: 350rem;
    left: 150rem;
    pointer-events: auto;
}

.sun-flare-size-label
{
    color: wheat;
    position: absolute;
    left: 13rem;
    text-transform: uppercase;
    top: 203rem;
    pointer-events: auto;
}

.sun-adjust-flare-size-slider
{
    position: absolute;
    top: 210rem;
    width: 350rem;
    left: 150rem;
    pointer-events: auto;
}

.ResetConfirmationDialog
{
    position: absolute;
    top: inherit;
    width: inherit;
    height: inherit;
}
