.Panel {
   position: absolute;
   display: flex;
   width: 950rem;
   height: 400rem;
   top: 500rem;
   left: 200rem;
   background-color: rgba(71, 55, 55, 0.3);
   box-shadow: inset 0 0 20px rgba(16, 16, 16, 0.6); /* Add a blurred black inner shadow */
   overflow-y: scroll;
   max-height: 400rem; 
 }
 
 .Panel::-webkit-scrollbar {
   position: absolute;
   width: 950rem;
   height: 400rem;
 }
 
 .Panel::-webkit-scrollbar-thumb {
   background-color: #888; /* Color of the thumb */
 }
 
 .Panel::-webkit-scrollbar-track {
   background-color: #f1f1f1; /* Color of the track */
 }
 
 
  
 .Span1{
  
    width: 1500rem;
    height: 200rem;
 }

 .LuminaBckImage{
    position: absolute;
    right: 200rem;
    width: 100%;
    height: 100%;
 }
 
 .TabsRow {
   position: absolute;
   display: flex;
   width: 950rem;
   height: 50rem;
   top: 440rem;
   left: 200rem;
   background-color: rgba(0, 0, 0, 0.7); /* Black with 70% opacity */
}




.ColorAdjustmentsButton {
   position: absolute;
   display: flex;
   background-image: url('https://svgshare.com/i/15rh.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 45rem;
   height: 45rem;
   left: 900rem; /* Adjusted left position */
   transition: transform 0.01s ease-in-out;
   border-radius: 50%; /* Make it round */
}

.ColorAdjustmentsButtonDeselected {
   position: absolute;
   display: flex;
   background-image: url('https://svgshare.com/i/15rh.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 45rem;
   height: 45rem;
   left: 900rem; /* Adjusted left position */
   transition: transform 0.01s ease-in-out;
   border-radius: 50%; /* Make it round */
}

.SettingsButton {
   position: absolute;
   display: inline-block;
   background-image: url('https://svgshare.com/i/15uQ.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 45rem;
   height: 45rem;
   left: 0rem;
   transition: transform 0.01s ease-in-out;
   border-radius: 50%; /* Make it round */
   filter: invert(100%); /* Invert the colors to turn black to white */
}

.SettingsButtonDeselected {
   position: absolute;
   display: inline-block;
   background-image: url('https://svgshare.com/i/15uQ.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 45rem;
   height: 45rem;
   left: 0rem;
   transition: transform 2s ease-in-out;
   border-radius: 50%; /* Make it round */
   filter: invert(100%); /* Invert the colors to turn black to white */
}

.PlanetaryButton {
   position: absolute;
   display: inline-block;
   background-image: url('https://svgshare.com/i/15zP.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 43rem;
   height: 43rem;
   left: 850rem; /* Adjusted left position */
   transition: transform 0.01s ease-in-out;
   border-radius: 50%; /* Make it round */
   filter: invert(100%); /* Invert the colors to turn black to white */
}

.PlanetaryButtonDeselected {
   position: absolute;
   display: inline-block;
   background-image: url('https://svgshare.com/i/15zP.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 43rem;
   height: 43rem;
   left: 850rem; /* Adjusted left position */
   transition: transform 2s ease-in-out;
   border-radius: 50%; /* Make it round */
   filter: invert(100%); /* Invert the colors to turn black to white */
}

.PlanetaryButton:hover {
   transform: translateY(-15%);
}

.ColorAdjustmentsButton:hover {
   transform: translateY(-15%);
}



.SettingsButton:hover{
   transform: translateY(-15%);
}














 .ColorAdjustments{
   position: absolute;

   right: 200rem;
   width: 800rem;
 }

 .FirstTabLabel{
   color: white;
   position: absolute;
   top: 15rem;
   left: -20rem;
   width:200rem;

 

   font-size: 20rem;
 }
 .CALabel{
   color: rgb(255, 255, 255);
   position: absolute;
   top: 50rem;
   left: 480rem;
   width: 100%;

   font-size: 18rem;
 }

 
// PostExposure Variables
$pe-top: 20rem;
$global-height: 40rem;
$distance:30rem;
.PostExposureSlider{
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 20rem;
   width: 500rem;
}

.PostExposureLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance + 20rem;
   white-space: nowrap;
}

.PostExposureValue{
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance + 20rem;
   width: 150rem;
   white-space: nowrap;
}

.pecheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance + 20rem;
   width: 45rem;
   height: 45rem;

 }

 .pecheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .postexposurecheckbox2 {
   z-index: -1;
 }






// Contrast variables
$contrast-top: 50rem;

.ContrastSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 70rem;
   width: 500rem;
}

.ContrastLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance + 70rem;
   white-space: nowrap;
}

.ContrastValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance + 70rem;
   width: 150rem;
   white-space: nowrap;
}

// Contrast checkbox
.cocheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance + 70rem;
   width: 45rem;
   height: 45rem;

 }

 .cocheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .contrastcheckbox2 {
   z-index: -1;
 }



// Hueshift variables
$hueshift-top: 80rem;

.HueshiftSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 120rem;
   width: 500rem;
}

.HueshiftLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance + 120rem;
   white-space: nowrap;
}

.HueshiftValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance + 120rem;
   width: 150rem;
   white-space: nowrap;
}

// Hueshift checkbox
.hscheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance + 120rem;
   width: 45rem;
   height: 45rem;

 }

 .hscheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .hueshiftcheckbox2 {
   z-index: -1;
 }


// Saturation

.SaturationSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 170rem;
   width: 500rem;
}

.SaturationLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance + 170rem;
   white-space: nowrap;
}

.SaturationValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance + 170rem;
   width: 150rem;
   white-space: nowrap;
}

// Saturation checkbox
.satcheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance + 170rem;
   width: 45rem;
   height: 45rem;

 }

 .satcheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .satcheckbox2 {
   z-index: -1;
 }


// White Balance

.WBLabel{
   color: rgb(255, 255, 255);
   position: absolute;
   top: 280rem;
   left: 500rem;
   width: 100%;

   font-size: 18rem;
}

// Temperature

.TemperatureSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 240rem;
   width: 500rem;
}

.TemperatureLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance + 240rem;
   white-space: nowrap;
}

.TemperatureValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance + 240rem;
   width: 150rem;
   white-space: nowrap;
}

// Temperature checkbox
.tempcheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance + 240rem;
   width: 45rem;
   height: 45rem;

 }

 .tempcheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .tempcheckbox2 {
   z-index: -1;
 }


// Tint

.TintSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 290rem;
   width: 500rem;
}

.TintLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance + 290rem;
   white-space: nowrap;
}

.TintValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance + 290rem;
   width: 150rem;
   white-space: nowrap;
}


// Tint checkbox
.tintcheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance + 290rem;
   width: 45rem;
   height: 45rem;

 }

 .tintcheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .tintcheckbox2 {
   z-index: -1;
 }

// Brightness

.BLabel {
   color: rgb(255, 255, 255);
   position: absolute;
   top: 400rem;
   left: 500rem;
   width: 100%;

   font-size: 18rem;
}


// Shadows

.ShadowsSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 360rem;
   width: 500rem;
}

.ShadowsLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance + 360rem;
   white-space: nowrap;
}

.ShadowsValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance + 360rem;
   width: 150rem;
   white-space: nowrap;
}

// Shadows checkbox
.shadowscheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance + 360rem;
   width: 45rem;
   height: 45rem;

 }

 .shadowscheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .shadowscheckbox2 {
   z-index: -1;
 }


.MidtonesSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance + 430rem;
   width: 500rem;
}

.MidtonesLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance +  430rem;
   white-space: nowrap;
}

// Midtones
.MidtonesValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance +  430rem;
   width: 150rem;
   white-space: nowrap;
}

// Shadows checkbox
.midtonescheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance +  430rem;
   width: 45rem;
   height: 45rem;

 }

 .midtonescheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .midtonescheckbox2 {
   z-index: -1;
 }



// Highlights
.HighlightsSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 480rem;
   top: $global-height + $distance +  500rem;
   width: 500rem;
}

.HighlightsLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 200rem;
   width: 150rem;
   top: $global-height + $distance +   500rem;
   white-space: nowrap;
}

.HighlightsValue {
   position: absolute;
   color: white;
   font-size: 18.7rem;
   left: 370rem;
   top: $global-height + $distance +  500rem;
   width: 150rem;
   white-space: nowrap;
}

// highlights checkbox
.highlightscheckbox {
   position: absolute;
   left: 370rem;
   top: $global-height + $distance +  500rem;
   width: 45rem;
   height: 45rem;

 }

 .highlightscheckboximage {
   position: absolute;
   left: 0rem;
   top: $global-height + $distance + -70rem;
   background-image: url('https://svgshare.com/i/15wf.svg');
   background-size: cover; /* Make sure the background image covers the entire area */
   width: 28rem;
   height: 28rem;
   filter: invert(100%);
 }

 .highlightscheckbox2 {
   z-index: -1;
 }





// Settings

.HelloLabel {
 font-size: 200rem;
}


.SettingsPanel {
   position: absolute; 
   top: 0rem;
   left: 0rem;
   width: inherit;
   height: inherit;
   overflow-y: auto;
 }

 .LuminaSaveButton {
   position: absolute;
   display: flex;
   width: 300rem;
   top: 20rem;
   left: 40rem;
 }

 .LuminaResetSettingsButton {
   position: absolute;
   display: flex;
   width: 300rem;
   top: 80rem;
   left: 40rem;
 }

 // Save image
 .SaveButtonLuminaImage {
   position: absolute;
   left: 125rem;
   top: 30rem;
   mask-image: url('https://svgshare.com/i/15u4.svg')
 }

  // Save image
  .ResetButtonLuminaImage {
   position: absolute;
   left: 125rem;
   top: 30rem;
   mask-image: url('https://svgshare.com/i/15u4.svg')
 }

 .VersionCheckLabel {
   position: absolute;
   bottom: 0rem;
   width: 100rem;
   height: 40rem;
   background-color: rgba(0, 0, 0, 0.2); /* Black with 70% opacity */
   color: rgba($color: #35372f, $alpha: 1.0) /* Set text color to white */
 }

 .UnityLegacyUIButton {
   position: absolute;
   display: flex;
   background-color: black;
   width: 300rem;
   left: 400rem;
   top: 80rem;
 }

.PlanetaryPanel {
   position: absolute; 
   top: 0rem;
   left: 0rem;
   width: inherit;
   height: inherit;
   overflow-y: auto;
}




 // Planetary Settings

 // Latitude
.LatitudeLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 0rem;
   width: 150rem;
   top: $global-height + $distance + -9rem;
   white-space: nowrap;
}

.LatitudeSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 250rem;
   top: $global-height + $distance + 0rem;
   width: 680rem;
   background-color: rgba(0, 0, 0, 0.5);
}

.LatitudeInput {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 155rem;
   width: 50rem;
   top: $global-height + $distance + -9rem;
   white-space: nowrap;
}

//Longitude
.LongitudeLabel {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 0rem;
   width: 150rem;
   top: $global-height + $distance + 31rem;
   white-space: nowrap;
}

.LongitudeSlider {
   position: absolute;
   height: 30rem;
   right: -120rem;
   left: 250rem;
   top: $global-height + $distance + 40rem;
   width: 680rem;
   background-color: rgba(0, 0, 0, 0.5);
}

.LongitudeInput {
   position: absolute;
   color: rgb(118, 118, 118);
   font-size: 20rem;
   left: 155rem;
   width: 50rem;
   top: $global-height + $distance + 31rem;
   white-space: nowrap;
}
 

